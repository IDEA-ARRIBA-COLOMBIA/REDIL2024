{
  "version": 3,
  "sources": ["../../sigma/rendering/dist/sigma-rendering.esm.js", "../../sigma/utils/dist/sigma-utils.esm.js", "../../@sigma/node-image/dist/sigma-node-image.esm.js"],
  "sourcesContent": ["import { f as NodeProgram, g as EdgeProgram } from '../../dist/index-ffa87df4.esm.js';\nexport { i as AbstractEdgeProgram, A as AbstractNodeProgram, k as AbstractProgram, D as DEFAULT_EDGE_ARROW_HEAD_PROGRAM_OPTIONS, u as DEFAULT_EDGE_CLAMPED_PROGRAM_OPTIONS, E as EdgeArrowProgram, g as EdgeProgram, e as EdgeRectangleProgram, N as NodeCircleProgram, f as NodeProgram, P as Program, t as createEdgeArrowHeadProgram, l as createEdgeArrowProgram, v as createEdgeClampedProgram, j as createEdgeCompoundProgram, h as createNodeCompoundProgram, c as drawDiscNodeHover, b as drawDiscNodeLabel, d as drawStraightEdgeLabel, m as getAttributeItemsCount, n as getAttributesItemsCount, r as killProgram, p as loadFragmentShader, q as loadProgram, o as loadVertexShader, s as numberToGLSLFloat } from '../../dist/index-ffa87df4.esm.js';\nimport { _ as _inherits, a as _classCallCheck, b as _callSuper, d as _createClass } from '../../dist/inherits-45ee1abe.esm.js';\nimport { f as floatColor } from '../../dist/colors-2f6d17f0.esm.js';\n\n// language=GLSL\nvar SHADER_SOURCE$5 = /*glsl*/\"\\nprecision mediump float;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float radius = 0.5;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\\n  float dist = radius - length(m);\\n\\n  // No antialiasing for picking mode:\\n  #ifdef PICKING_MODE\\n  if (dist > v_border)\\n    gl_FragColor = v_color;\\n  else\\n    gl_FragColor = transparent;\\n\\n  #else\\n  float t = 0.0;\\n  if (dist > v_border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / v_border;\\n\\n  gl_FragColor = mix(transparent, v_color, t);\\n  #endif\\n}\\n\";\nvar FRAGMENT_SHADER_SOURCE$2 = SHADER_SOURCE$5;\n\n// language=GLSL\nvar SHADER_SOURCE$4 = /*glsl*/\"\\nattribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_position;\\nattribute float a_size;\\n\\nuniform float u_sizeRatio;\\nuniform float u_pixelRatio;\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  // Multiply the point size twice:\\n  //  - x SCALING_RATIO to correct the canvas scaling\\n  //  - x 2 to correct the formulae\\n  gl_PointSize = a_size / u_sizeRatio * u_pixelRatio * 2.0;\\n\\n  v_border = (0.5 / a_size) * u_sizeRatio;\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";\nvar VERTEX_SHADER_SOURCE$2 = SHADER_SOURCE$4;\n\nvar _WebGLRenderingContex$2 = WebGLRenderingContext,\n  UNSIGNED_BYTE$2 = _WebGLRenderingContex$2.UNSIGNED_BYTE,\n  FLOAT$2 = _WebGLRenderingContex$2.FLOAT;\nvar UNIFORMS$2 = [\"u_sizeRatio\", \"u_pixelRatio\", \"u_matrix\"];\nvar NodePointProgram = /*#__PURE__*/function (_NodeProgram) {\n  _inherits(NodePointProgram, _NodeProgram);\n  function NodePointProgram() {\n    _classCallCheck(this, NodePointProgram);\n    return _callSuper(this, NodePointProgram, arguments);\n  }\n  _createClass(NodePointProgram, [{\n    key: \"getDefinition\",\n    value: function getDefinition() {\n      return {\n        VERTICES: 1,\n        VERTEX_SHADER_SOURCE: VERTEX_SHADER_SOURCE$2,\n        FRAGMENT_SHADER_SOURCE: FRAGMENT_SHADER_SOURCE$2,\n        METHOD: WebGLRenderingContext.POINTS,\n        UNIFORMS: UNIFORMS$2,\n        ATTRIBUTES: [{\n          name: \"a_position\",\n          size: 2,\n          type: FLOAT$2\n        }, {\n          name: \"a_size\",\n          size: 1,\n          type: FLOAT$2\n        }, {\n          name: \"a_color\",\n          size: 4,\n          type: UNSIGNED_BYTE$2,\n          normalized: true\n        }, {\n          name: \"a_id\",\n          size: 4,\n          type: UNSIGNED_BYTE$2,\n          normalized: true\n        }]\n      };\n    }\n  }, {\n    key: \"processVisibleItem\",\n    value: function processVisibleItem(nodeIndex, startIndex, data) {\n      var array = this.array;\n      array[startIndex++] = data.x;\n      array[startIndex++] = data.y;\n      array[startIndex++] = data.size;\n      array[startIndex++] = floatColor(data.color);\n      array[startIndex++] = nodeIndex;\n    }\n  }, {\n    key: \"setUniforms\",\n    value: function setUniforms(_ref, _ref2) {\n      var sizeRatio = _ref.sizeRatio,\n        pixelRatio = _ref.pixelRatio,\n        matrix = _ref.matrix;\n      var gl = _ref2.gl,\n        uniformLocations = _ref2.uniformLocations;\n      var u_sizeRatio = uniformLocations.u_sizeRatio,\n        u_pixelRatio = uniformLocations.u_pixelRatio,\n        u_matrix = uniformLocations.u_matrix;\n      gl.uniform1f(u_pixelRatio, pixelRatio);\n      gl.uniform1f(u_sizeRatio, sizeRatio);\n      gl.uniformMatrix3fv(u_matrix, false, matrix);\n    }\n  }]);\n  return NodePointProgram;\n}(NodeProgram);\n\n// language=GLSL\nvar SHADER_SOURCE$3 = /*glsl*/\"\\nprecision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";\nvar FRAGMENT_SHADER_SOURCE$1 = SHADER_SOURCE$3;\n\n// language=GLSL\nvar SHADER_SOURCE$2 = /*glsl*/\"\\nattribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_position;\\n\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  // Scale from [[-1 1] [-1 1]] to the container:\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";\nvar VERTEX_SHADER_SOURCE$1 = SHADER_SOURCE$2;\n\nvar _WebGLRenderingContex$1 = WebGLRenderingContext,\n  UNSIGNED_BYTE$1 = _WebGLRenderingContex$1.UNSIGNED_BYTE,\n  FLOAT$1 = _WebGLRenderingContex$1.FLOAT;\nvar UNIFORMS$1 = [\"u_matrix\"];\nvar EdgeLineProgram = /*#__PURE__*/function (_EdgeProgram) {\n  _inherits(EdgeLineProgram, _EdgeProgram);\n  function EdgeLineProgram() {\n    _classCallCheck(this, EdgeLineProgram);\n    return _callSuper(this, EdgeLineProgram, arguments);\n  }\n  _createClass(EdgeLineProgram, [{\n    key: \"getDefinition\",\n    value: function getDefinition() {\n      return {\n        VERTICES: 2,\n        VERTEX_SHADER_SOURCE: VERTEX_SHADER_SOURCE$1,\n        FRAGMENT_SHADER_SOURCE: FRAGMENT_SHADER_SOURCE$1,\n        METHOD: WebGLRenderingContext.LINES,\n        UNIFORMS: UNIFORMS$1,\n        ATTRIBUTES: [{\n          name: \"a_position\",\n          size: 2,\n          type: FLOAT$1\n        }, {\n          name: \"a_color\",\n          size: 4,\n          type: UNSIGNED_BYTE$1,\n          normalized: true\n        }, {\n          name: \"a_id\",\n          size: 4,\n          type: UNSIGNED_BYTE$1,\n          normalized: true\n        }]\n      };\n    }\n  }, {\n    key: \"processVisibleItem\",\n    value: function processVisibleItem(edgeIndex, startIndex, sourceData, targetData, data) {\n      var array = this.array;\n      var x1 = sourceData.x;\n      var y1 = sourceData.y;\n      var x2 = targetData.x;\n      var y2 = targetData.y;\n      var color = floatColor(data.color);\n\n      // First point\n      array[startIndex++] = x1;\n      array[startIndex++] = y1;\n      array[startIndex++] = color;\n      array[startIndex++] = edgeIndex;\n\n      // Second point\n      array[startIndex++] = x2;\n      array[startIndex++] = y2;\n      array[startIndex++] = color;\n      array[startIndex++] = edgeIndex;\n    }\n  }, {\n    key: \"setUniforms\",\n    value: function setUniforms(params, _ref) {\n      var gl = _ref.gl,\n        uniformLocations = _ref.uniformLocations;\n      var u_matrix = uniformLocations.u_matrix;\n      gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n    }\n  }]);\n  return EdgeLineProgram;\n}(EdgeProgram);\n\n// language=GLSL\nvar SHADER_SOURCE$1 = /*glsl*/\"\\nprecision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";\nvar FRAGMENT_SHADER_SOURCE = SHADER_SOURCE$1;\n\n// language=GLSL\nvar SHADER_SOURCE = /*glsl*/\"\\nattribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute float a_normalCoef;\\nattribute vec2 a_positionStart;\\nattribute vec2 a_positionEnd;\\nattribute float a_positionCoef;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  vec2 normal = a_normal * a_normalCoef;\\n  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;\\n\\n  // The only different here with edge.vert.glsl is that we need to handle null\\n  // input normal vector. Apart from that, you can read edge.vert.glsl more info\\n  // on how it works:\\n  float normalLength = length(normal);\\n  vec2 unitNormal = normal / normalLength;\\n  if (normalLength <= 0.0) unitNormal = normal;\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness, 1)).xy, 0, 1);\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";\nvar VERTEX_SHADER_SOURCE = SHADER_SOURCE;\n\nvar _WebGLRenderingContex = WebGLRenderingContext,\n  UNSIGNED_BYTE = _WebGLRenderingContex.UNSIGNED_BYTE,\n  FLOAT = _WebGLRenderingContex.FLOAT;\nvar UNIFORMS = [\"u_matrix\", \"u_sizeRatio\", \"u_correctionRatio\", \"u_minEdgeThickness\"];\nvar EdgeTriangleProgram = /*#__PURE__*/function (_EdgeProgram) {\n  _inherits(EdgeTriangleProgram, _EdgeProgram);\n  function EdgeTriangleProgram() {\n    _classCallCheck(this, EdgeTriangleProgram);\n    return _callSuper(this, EdgeTriangleProgram, arguments);\n  }\n  _createClass(EdgeTriangleProgram, [{\n    key: \"getDefinition\",\n    value: function getDefinition() {\n      return {\n        VERTICES: 3,\n        VERTEX_SHADER_SOURCE: VERTEX_SHADER_SOURCE,\n        FRAGMENT_SHADER_SOURCE: FRAGMENT_SHADER_SOURCE,\n        METHOD: WebGLRenderingContext.TRIANGLES,\n        UNIFORMS: UNIFORMS,\n        ATTRIBUTES: [{\n          name: \"a_positionStart\",\n          size: 2,\n          type: FLOAT\n        }, {\n          name: \"a_positionEnd\",\n          size: 2,\n          type: FLOAT\n        }, {\n          name: \"a_normal\",\n          size: 2,\n          type: FLOAT\n        }, {\n          name: \"a_color\",\n          size: 4,\n          type: UNSIGNED_BYTE,\n          normalized: true\n        }, {\n          name: \"a_id\",\n          size: 4,\n          type: UNSIGNED_BYTE,\n          normalized: true\n        }],\n        CONSTANT_ATTRIBUTES: [\n        // If 0, then position will be a_positionStart\n        // If 1, then position will be a_positionEnd\n        {\n          name: \"a_positionCoef\",\n          size: 1,\n          type: FLOAT\n        }, {\n          name: \"a_normalCoef\",\n          size: 1,\n          type: FLOAT\n        }],\n        CONSTANT_DATA: [[0, 1], [0, -1], [1, 0]]\n      };\n    }\n  }, {\n    key: \"processVisibleItem\",\n    value: function processVisibleItem(edgeIndex, startIndex, sourceData, targetData, data) {\n      var thickness = data.size || 1;\n      var x1 = sourceData.x;\n      var y1 = sourceData.y;\n      var x2 = targetData.x;\n      var y2 = targetData.y;\n      var color = floatColor(data.color);\n\n      // Computing normals\n      var dx = x2 - x1;\n      var dy = y2 - y1;\n      var len = dx * dx + dy * dy;\n      var n1 = 0;\n      var n2 = 0;\n      if (len) {\n        len = 1 / Math.sqrt(len);\n        n1 = -dy * len * thickness;\n        n2 = dx * len * thickness;\n      }\n      var array = this.array;\n\n      // First point\n      array[startIndex++] = x1;\n      array[startIndex++] = y1;\n      array[startIndex++] = x2;\n      array[startIndex++] = y2;\n      array[startIndex++] = n1;\n      array[startIndex++] = n2;\n      array[startIndex++] = color;\n      array[startIndex++] = edgeIndex;\n    }\n  }, {\n    key: \"setUniforms\",\n    value: function setUniforms(params, _ref) {\n      var gl = _ref.gl,\n        uniformLocations = _ref.uniformLocations;\n      var u_matrix = uniformLocations.u_matrix,\n        u_sizeRatio = uniformLocations.u_sizeRatio,\n        u_correctionRatio = uniformLocations.u_correctionRatio,\n        u_minEdgeThickness = uniformLocations.u_minEdgeThickness;\n      gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n      gl.uniform1f(u_sizeRatio, params.sizeRatio);\n      gl.uniform1f(u_correctionRatio, params.correctionRatio);\n      gl.uniform1f(u_minEdgeThickness, params.minEdgeThickness);\n    }\n  }]);\n  return EdgeTriangleProgram;\n}(EdgeProgram);\n\nexport { EdgeLineProgram, EdgeTriangleProgram, NodePointProgram };\n", "export { A as ANIMATE_DEFAULTS, h as animateNodes, d as createElement, c as createNormalizationFunction, o as cubicIn, r as cubicInOut, p as cubicOut, e as easings, j as getCorrectionRatio, b as getMatrixImpact, g as getPixelRatio, a as graphExtent, i as identity, l as linear, m as matrixFromCamera, w as multiply, f as multiplyVec2, q as quadraticIn, n as quadraticInOut, k as quadraticOut, t as rotate, s as scale, u as translate, v as validateGraph, z as zIndexOrdering } from '../../dist/normalization-6ad2dc39.esm.js';\nexport { H as HTML_COLORS, d as colorToArray, c as colorToIndex, e as extractPixel, f as floatColor, g as getPixelColor, i as indexToColor, p as parseColor, r as rgbaToFloat } from '../../dist/colors-2f6d17f0.esm.js';\nexport { a as assign, b as assignDeep, e as extend, i as isPlainObject } from '../../dist/data-31990a76.esm.js';\nimport 'graphology-utils/is-graph';\n", "import { NodeProgram } from 'sigma/rendering';\nimport { floatColor } from 'sigma/utils';\nimport { EventEmitter } from 'events';\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function () {\n    return !!t;\n  })();\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\n\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\nfunction getFragmentShader(_ref) {\n  var texturesCount = _ref.texturesCount;\n  // language=GLSL\n  var SHADER = /*glsl*/\"\\nprecision highp float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_diffVector;\\nvarying float v_radius;\\nvarying vec4 v_texture;\\nvarying float v_textureIndex;\\n\\nuniform sampler2D u_atlas[\".concat(texturesCount, \"];\\nuniform float u_correctionRatio;\\nuniform float u_cameraAngle;\\nuniform float u_percentagePadding;\\nuniform bool u_colorizeImages;\\nuniform bool u_keepWithinCircle;\\n\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nconst float radius = 0.5;\\n\\nvoid main(void) {\\n  float border = 2.0 * u_correctionRatio;\\n  float dist = length(v_diffVector);\\n  vec4 color = gl_FragColor;\\n\\n  float c = cos(-u_cameraAngle);\\n  float s = sin(-u_cameraAngle);\\n  vec2 diffVector = mat2(c, s, -s, c) * (v_diffVector);\\n\\n  // No antialiasing for picking mode:\\n  #ifdef PICKING_MODE\\n  border = 0.0;\\n  color = v_color;\\n\\n  #else\\n  // First case: No image to display\\n  if (v_texture.w <= 0.0) {\\n    if (!u_colorizeImages) {\\n      color = v_color;\\n    }\\n  }\\n\\n  // Second case: Image loaded into the texture\\n  else {\\n    float paddingRatio = 1.0 + 2.0 * u_percentagePadding;\\n    float coef = u_keepWithinCircle ? 1.0 : \").concat(Math.SQRT2, \";\\n    vec2 coordinateInTexture = diffVector * vec2(paddingRatio, -paddingRatio) / v_radius / 2.0 * coef + vec2(0.5, 0.5);\\n    int index = int(v_textureIndex + 0.5); // +0.5 avoid rounding errors\\n\\n    bool noTextureFound = false;\\n    vec4 texel;\\n\\n    \").concat(_toConsumableArray(new Array(texturesCount)).map(function (_, i) {\n    return \"if (index == \".concat(i, \") texel = texture2D(u_atlas[\").concat(i, \"], (v_texture.xy + coordinateInTexture * v_texture.zw), -1.0);\");\n  }).join(\"\\n    else \") + \"else {\\n      texel = texture2D(u_atlas[0], (v_texture.xy + coordinateInTexture * v_texture.zw), -1.0);\\n      noTextureFound = true;\\n    }\", \"\\n\\n    if (noTextureFound) {\\n      color = v_color;\\n    } else {\\n      // Colorize all visible image pixels:\\n      if (u_colorizeImages) {\\n        color = mix(gl_FragColor, v_color, texel.a);\\n      }\\n\\n      // Colorize background pixels, keep image pixel colors:\\n      else {\\n        color = vec4(mix(v_color, texel, texel.a).rgb, max(texel.a, v_color.a));\\n      }\\n\\n      // Erase pixels \\\"in the padding\\\":\\n      if (abs(diffVector.x) > v_radius / paddingRatio || abs(diffVector.y) > v_radius / paddingRatio) {\\n        color = u_colorizeImages ? gl_FragColor : v_color;\\n      }\\n    }\\n  }\\n  #endif\\n\\n  // Crop in a circle when u_keepWithinCircle is truthy:\\n  if (u_keepWithinCircle) {\\n    if (dist < v_radius - border) {\\n      gl_FragColor = color;\\n    } else if (dist < v_radius) {\\n      gl_FragColor = mix(transparent, color, (v_radius - dist) / border);\\n    }\\n  }\\n\\n  // Crop in a square else:\\n  else {\\n    float squareHalfSize = v_radius * \").concat(Math.SQRT1_2 * Math.cos(Math.PI / 12), \";\\n    if (abs(diffVector.x) > squareHalfSize || abs(diffVector.y) > squareHalfSize) {\\n      gl_FragColor = transparent;\\n    } else {\\n      gl_FragColor = color;\\n    }\\n  }\\n}\\n\");\n  return SHADER;\n}\n\n// language=GLSL\nvar VERTEX_SHADER_SOURCE = /*glsl*/\"\\nattribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_position;\\nattribute float a_size;\\nattribute float a_angle;\\nattribute vec4 a_texture;\\nattribute float a_textureIndex;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_diffVector;\\nvarying float v_radius;\\nvarying vec4 v_texture;\\nvarying float v_textureIndex;\\n\\nconst float bias = 255.0 / 254.0;\\nconst float marginRatio = 1.05;\\n\\nvoid main() {\\n  float size = a_size * u_correctionRatio / u_sizeRatio * 4.0;\\n  vec2 diffVector = size * vec2(cos(a_angle), sin(a_angle));\\n  vec2 position = a_position + diffVector * marginRatio;\\n  gl_Position = vec4(\\n    (u_matrix * vec3(position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  v_diffVector = diffVector;\\n  v_radius = size / 2.0 / marginRatio;\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n\\n  // Pass the texture coordinates:\\n  v_textureIndex = a_textureIndex;\\n  v_texture = a_texture;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";\nvar VERTEX_SHADER_SOURCE$1 = VERTEX_SHADER_SOURCE;\n\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function (t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function (t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(typeof e + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function () {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function (e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function (t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    catch: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\n\n/**\n * Useful types:\n * *************\n */\n\nvar DEFAULT_TEXTURE_MANAGER_OPTIONS = {\n  size: {\n    mode: \"max\",\n    value: 512\n  },\n  objectFit: \"cover\",\n  correctCentering: false,\n  maxTextureSize: 4096,\n  debounceTimeout: 500,\n  crossOrigin: \"anonymous\"\n};\n\n// This margin helps to avoid images collisions in the texture:\nvar MARGIN_IN_TEXTURE = 1;\n\n/**\n * Helpers:\n * ********\n */\n/**\n * This helper loads an image at a given URL, and returns an HTMLImageElement\n * with it displayed once it's properly loaded, within a promise.\n */\nfunction loadRasterImage(imageSource) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    crossOrigin = _ref.crossOrigin;\n  return new Promise(function (resolve, reject) {\n    var image = new Image();\n    image.addEventListener(\"load\", function () {\n      resolve(image);\n    }, {\n      once: true\n    });\n    image.addEventListener(\"error\", function (e) {\n      reject(e.error);\n    }, {\n      once: true\n    });\n\n    // Load image:\n    if (crossOrigin) {\n      image.setAttribute(\"crossOrigin\", crossOrigin);\n    }\n    image.src = imageSource;\n  });\n}\n\n/**\n * This helper loads an SVG image at a given URL, adjusts its size to a given\n * size, and returns an HTMLImageElement with it displayed once it's properly\n * loaded, within a promise.\n */\nfunction loadSVGImage(_x) {\n  return _loadSVGImage.apply(this, arguments);\n}\n\n/**\n * This helper loads an image using the proper function.\n */\nfunction _loadSVGImage() {\n  _loadSVGImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(imageSource) {\n    var _ref2,\n      size,\n      crossOrigin,\n      resp,\n      svgString,\n      svg,\n      root,\n      originalWidth,\n      originalHeight,\n      correctedSvgString,\n      blob,\n      url,\n      res,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref2 = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {}, size = _ref2.size, crossOrigin = _ref2.crossOrigin;\n          if (!(crossOrigin === \"use-credentials\")) {\n            _context2.next = 7;\n            break;\n          }\n          _context2.next = 4;\n          return fetch(imageSource, {\n            credentials: \"include\"\n          });\n        case 4:\n          resp = _context2.sent;\n          _context2.next = 10;\n          break;\n        case 7:\n          _context2.next = 9;\n          return fetch(imageSource);\n        case 9:\n          resp = _context2.sent;\n        case 10:\n          _context2.next = 12;\n          return resp.text();\n        case 12:\n          svgString = _context2.sent;\n          svg = new DOMParser().parseFromString(svgString, \"image/svg+xml\");\n          root = svg.documentElement;\n          originalWidth = root.getAttribute(\"width\");\n          originalHeight = root.getAttribute(\"height\");\n          if (!(!originalWidth || !originalHeight)) {\n            _context2.next = 19;\n            break;\n          }\n          throw new Error(\"loadSVGImage: cannot use `size` if target SVG has no definite dimensions.\");\n        case 19:\n          if (typeof size === \"number\") {\n            root.setAttribute(\"width\", \"\" + size);\n            root.setAttribute(\"height\", \"\" + size);\n          }\n\n          // NOTE: since Google Material last changes to their icon viewBox, this\n          // code is no longer necessary (hopefully it does not break something else...)\n          // root.setAttribute(\"viewBox\", `0 0 ${originalWidth} ${originalHeight}`);\n          correctedSvgString = new XMLSerializer().serializeToString(svg);\n          blob = new Blob([correctedSvgString], {\n            type: \"image/svg+xml\"\n          });\n          url = URL.createObjectURL(blob);\n          res = loadRasterImage(url);\n          res[\"finally\"](function () {\n            return URL.revokeObjectURL(url);\n          });\n          return _context2.abrupt(\"return\", res);\n        case 26:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _loadSVGImage.apply(this, arguments);\n}\nfunction loadImage(_x2) {\n  return _loadImage.apply(this, arguments);\n}\n\n/**\n * This helper computes exact coordinates to draw an image onto a texture.\n */\nfunction _loadImage() {\n  _loadImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(imageSource) {\n    var _imageSource$split$0$;\n    var _ref3,\n      size,\n      crossOrigin,\n      isSVG,\n      image,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _ref3 = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {}, size = _ref3.size, crossOrigin = _ref3.crossOrigin;\n          isSVG = ((_imageSource$split$0$ = imageSource.split(/[#?]/)[0].split(\".\").pop()) === null || _imageSource$split$0$ === void 0 ? void 0 : _imageSource$split$0$.trim().toLowerCase()) === \"svg\";\n          if (!(isSVG && size)) {\n            _context3.next = 16;\n            break;\n          }\n          _context3.prev = 3;\n          _context3.next = 6;\n          return loadSVGImage(imageSource, {\n            size: size,\n            crossOrigin: crossOrigin\n          });\n        case 6:\n          image = _context3.sent;\n          _context3.next = 14;\n          break;\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](3);\n          _context3.next = 13;\n          return loadRasterImage(imageSource, {\n            crossOrigin: crossOrigin\n          });\n        case 13:\n          image = _context3.sent;\n        case 14:\n          _context3.next = 19;\n          break;\n        case 16:\n          _context3.next = 18;\n          return loadRasterImage(imageSource, {\n            crossOrigin: crossOrigin\n          });\n        case 18:\n          image = _context3.sent;\n        case 19:\n          return _context3.abrupt(\"return\", image);\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[3, 9]]);\n  }));\n  return _loadImage.apply(this, arguments);\n}\nfunction refineImage(image, corrector, _ref4) {\n  var objectFit = _ref4.objectFit,\n    size = _ref4.size,\n    correctCentering = _ref4.correctCentering;\n  var sourceSize = objectFit === \"contain\" ? Math.max(image.width, image.height) : Math.min(image.width, image.height);\n  var destinationSize = size.mode === \"auto\" ? sourceSize : size.mode === \"force\" ? size.value : Math.min(size.value, sourceSize);\n  var sourceX = (image.width - sourceSize) / 2;\n  var sourceY = (image.height - sourceSize) / 2;\n  if (correctCentering) {\n    var correction = corrector.getCorrectionOffset(image, sourceSize);\n    sourceX = correction.x;\n    sourceY = correction.y;\n  }\n  return {\n    sourceX: sourceX,\n    sourceY: sourceY,\n    sourceSize: sourceSize,\n    destinationSize: destinationSize\n  };\n}\n\n/**\n * This helper takes an array of ready-to-draw images, and draws as much as possible in a single texture.\n * It then returns the atlas of the draw images, as well as the texture itself.\n */\nfunction drawTexture(images, ctx, cursor) {\n  var _ctx$canvas = ctx.canvas,\n    width = _ctx$canvas.width,\n    height = _ctx$canvas.height;\n\n  // Refine images coordinates:\n  var refinedImagesArray = [];\n  var x = cursor.x,\n    y = cursor.y,\n    rowHeight = cursor.rowHeight,\n    maxRowWidth = cursor.maxRowWidth;\n  var atlas = {};\n  for (var i = 0, l = images.length; i < l; i++) {\n    var _images$i = images[i],\n      key = _images$i.key,\n      image = _images$i.image,\n      sourceSize = _images$i.sourceSize,\n      sourceX = _images$i.sourceX,\n      sourceY = _images$i.sourceY,\n      destinationSize = _images$i.destinationSize;\n    var destinationSizeWithMargin = destinationSize + MARGIN_IN_TEXTURE;\n\n    // If the image does not fit, just skip it:\n    if (y + destinationSizeWithMargin > height || x + destinationSizeWithMargin > width && y + destinationSizeWithMargin + rowHeight > height) {\n      continue;\n    }\n    if (x + destinationSizeWithMargin > width) {\n      maxRowWidth = Math.max(maxRowWidth, x);\n      x = 0;\n      y += rowHeight;\n      rowHeight = destinationSizeWithMargin;\n    }\n    refinedImagesArray.push({\n      key: key,\n      image: image,\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourceSize: sourceSize,\n      destinationX: x,\n      destinationY: y,\n      destinationSize: destinationSize\n    });\n    atlas[key] = {\n      x: x,\n      y: y,\n      size: destinationSize\n    };\n    x += destinationSizeWithMargin;\n    rowHeight = Math.max(rowHeight, destinationSizeWithMargin);\n  }\n\n  // Crop texture to final best dimensions:\n  maxRowWidth = Math.max(maxRowWidth, x);\n  var effectiveWidth = maxRowWidth;\n  var effectiveHeight = y + rowHeight;\n\n  // Fill texture:\n  for (var _i = 0, _l = refinedImagesArray.length; _i < _l; _i++) {\n    var _refinedImagesArray$_ = refinedImagesArray[_i],\n      _image = _refinedImagesArray$_.image,\n      _sourceSize = _refinedImagesArray$_.sourceSize,\n      _sourceX = _refinedImagesArray$_.sourceX,\n      _sourceY = _refinedImagesArray$_.sourceY,\n      _destinationSize = _refinedImagesArray$_.destinationSize,\n      destinationX = _refinedImagesArray$_.destinationX,\n      destinationY = _refinedImagesArray$_.destinationY;\n    ctx.drawImage(_image, _sourceX, _sourceY, _sourceSize, _sourceSize, destinationX, destinationY, _destinationSize, _destinationSize);\n  }\n  return {\n    atlas: atlas,\n    texture: ctx.getImageData(0, 0, effectiveWidth, effectiveHeight),\n    cursor: {\n      x: x,\n      y: y,\n      rowHeight: rowHeight,\n      maxRowWidth: maxRowWidth\n    }\n  };\n}\n\n/**\n * This helper takes a collection of image states and a context, draw all the\n * images in the context, and returns an atlas to get where each image is drawn\n * on the texture.\n */\nfunction drawTextures(_ref5, images, ctx) {\n  var prevAtlas = _ref5.atlas,\n    prevTextures = _ref5.textures,\n    prevCursor = _ref5.cursor;\n  var res = {\n    atlas: _objectSpread2({}, prevAtlas),\n    textures: _toConsumableArray(prevTextures.slice(0, -1)),\n    cursor: _objectSpread2({}, prevCursor)\n  };\n\n  // Extract images that are ready to draw, but not drawn yet:\n  var imagesToDraw = [];\n  for (var key in images) {\n    var _prevAtlas$key;\n    // Skip images that are not ready yet:\n    var imageState = images[key];\n    if (imageState.status !== \"ready\") continue;\n\n    // Skip all images that already exist in a texture:\n    var textureIndex = (_prevAtlas$key = prevAtlas[key]) === null || _prevAtlas$key === void 0 ? void 0 : _prevAtlas$key.textureIndex;\n    if (typeof textureIndex === \"number\") continue;\n\n    // Keep all the rest:\n    imagesToDraw.push(_objectSpread2({\n      key: key\n    }, imageState));\n  }\n\n  // Draw remaining images on new textures until there are none remaining:\n  var _loop = function _loop() {\n    var _drawTexture = drawTexture(imagesToDraw, ctx, res.cursor),\n      atlas = _drawTexture.atlas,\n      texture = _drawTexture.texture,\n      cursor = _drawTexture.cursor;\n    res.cursor = cursor;\n    var remainingImages = [];\n    imagesToDraw.forEach(function (image) {\n      if (atlas[image.key]) {\n        res.atlas[image.key] = _objectSpread2(_objectSpread2({}, atlas[image.key]), {}, {\n          textureIndex: res.textures.length\n        });\n      } else {\n        remainingImages.push(image);\n      }\n    });\n    res.textures.push(texture);\n    imagesToDraw = remainingImages;\n    if (imagesToDraw.length) {\n      res.cursor = {\n        x: 0,\n        y: 0,\n        rowHeight: 0,\n        maxRowWidth: 0\n      };\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    }\n  };\n  while (imagesToDraw.length) {\n    _loop();\n  }\n  return res;\n}\n\n/**\n * This class helps to \"correct\" the centering of an SVG pictogram by finding\n * the \"true\" visually correct center through the barycenter of the pictogram's\n * alpha layer in x and y dimension.\n */\nvar PictogramCenteringCorrector = /*#__PURE__*/function () {\n  function PictogramCenteringCorrector() {\n    _classCallCheck(this, PictogramCenteringCorrector);\n    this.canvas = document.createElement(\"canvas\");\n    this.context = this.canvas.getContext(\"2d\", {\n      willReadFrequently: true\n    });\n  }\n  _createClass(PictogramCenteringCorrector, [{\n    key: \"getCorrectionOffset\",\n    value: function getCorrectionOffset(image, size) {\n      this.canvas.width = size;\n      this.canvas.height = size;\n      this.context.clearRect(0, 0, size, size);\n      this.context.drawImage(image, 0, 0, size, size);\n      var data = this.context.getImageData(0, 0, size, size).data;\n      var alpha = new Uint8ClampedArray(data.length / 4);\n      for (var i = 0; i < data.length; i++) {\n        alpha[i] = data[i * 4 + 3];\n      }\n      var sumX = 0;\n      var sumY = 0;\n      var total = 0;\n      for (var y = 0; y < size; y++) {\n        for (var x = 0; x < size; x++) {\n          var a = alpha[y * size + x];\n          total += a;\n          sumX += a * x;\n          sumY += a * y;\n        }\n      }\n      var barycenterX = sumX / total;\n      var barycenterY = sumY / total;\n      return {\n        x: barycenterX - size / 2,\n        y: barycenterY - size / 2\n      };\n    }\n  }]);\n  return PictogramCenteringCorrector;\n}();\nvar TextureManager = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(TextureManager, _EventEmitter);\n  function TextureManager() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, TextureManager);\n    _this = _callSuper(this, TextureManager);\n    _defineProperty(_assertThisInitialized(_this), \"canvas\", document.createElement(\"canvas\"));\n    _defineProperty(_assertThisInitialized(_this), \"ctx\", _this.canvas.getContext(\"2d\", {\n      willReadFrequently: true\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"corrector\", new PictogramCenteringCorrector());\n    _defineProperty(_assertThisInitialized(_this), \"imageStates\", {});\n    _defineProperty(_assertThisInitialized(_this), \"textures\", [_this.ctx.getImageData(0, 0, 1, 1)]);\n    _defineProperty(_assertThisInitialized(_this), \"lastTextureCursor\", {\n      x: 0,\n      y: 0,\n      rowHeight: 0,\n      maxRowWidth: 0\n    });\n    _defineProperty(_assertThisInitialized(_this), \"atlas\", {});\n    _this.options = _objectSpread2(_objectSpread2({}, DEFAULT_TEXTURE_MANAGER_OPTIONS), options);\n    _this.canvas.width = _this.options.maxTextureSize;\n    _this.canvas.height = _this.options.maxTextureSize;\n    return _this;\n  }\n  _createClass(TextureManager, [{\n    key: \"scheduleGenerateTexture\",\n    value: function scheduleGenerateTexture() {\n      var _this2 = this;\n      if (typeof this.frameId === \"number\") return;\n      if (typeof this.options.debounceTimeout === \"number\") {\n        this.frameId = window.setTimeout(function () {\n          _this2.generateTextures();\n          _this2.frameId = undefined;\n        }, this.options.debounceTimeout);\n      } else {\n        this.generateTextures();\n      }\n    }\n  }, {\n    key: \"generateTextures\",\n    value: function generateTextures() {\n      var _drawTextures = drawTextures({\n          atlas: this.atlas,\n          textures: this.textures,\n          cursor: this.lastTextureCursor\n        }, this.imageStates, this.ctx),\n        atlas = _drawTextures.atlas,\n        textures = _drawTextures.textures,\n        cursor = _drawTextures.cursor;\n      this.atlas = atlas;\n      this.textures = textures;\n      this.lastTextureCursor = cursor;\n      this.emit(TextureManager.NEW_TEXTURE_EVENT, {\n        atlas: atlas,\n        textures: textures\n      });\n    }\n\n    // PUBLIC API:\n  }, {\n    key: \"registerImage\",\n    value: function () {\n      var _registerImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n        var size, image;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.imageStates[source]) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              this.imageStates[source] = {\n                status: \"loading\"\n              };\n              _context.prev = 3;\n              size = this.options.size;\n              _context.next = 7;\n              return loadImage(source, {\n                size: size.mode === \"force\" ? size.value : undefined,\n                crossOrigin: this.options.crossOrigin || undefined\n              });\n            case 7:\n              image = _context.sent;\n              this.imageStates[source] = _objectSpread2({\n                status: \"ready\",\n                image: image\n              }, refineImage(image, this.corrector, this.options));\n              this.scheduleGenerateTexture();\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](3);\n              this.imageStates[source] = {\n                status: \"error\"\n              };\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[3, 12]]);\n      }));\n      function registerImage(_x3) {\n        return _registerImage.apply(this, arguments);\n      }\n      return registerImage;\n    }()\n  }, {\n    key: \"getAtlas\",\n    value: function getAtlas() {\n      return this.atlas;\n    }\n  }, {\n    key: \"getTextures\",\n    value: function getTextures() {\n      return this.textures;\n    }\n  }]);\n  return TextureManager;\n}(EventEmitter);\n_defineProperty(TextureManager, \"NEW_TEXTURE_EVENT\", \"newTexture\");\n\nvar _excluded = [\"drawHover\", \"drawLabel\", \"drawingMode\", \"keepWithinCircle\", \"padding\", \"colorAttribute\", \"imageAttribute\"];\nvar _WebGLRenderingContex = WebGLRenderingContext,\n  UNSIGNED_BYTE = _WebGLRenderingContex.UNSIGNED_BYTE,\n  FLOAT = _WebGLRenderingContex.FLOAT;\nvar DEFAULT_CREATE_NODE_IMAGE_OPTIONS = _objectSpread2(_objectSpread2({}, DEFAULT_TEXTURE_MANAGER_OPTIONS), {}, {\n  drawingMode: \"background\",\n  keepWithinCircle: true,\n  drawLabel: undefined,\n  drawHover: undefined,\n  padding: 0,\n  colorAttribute: \"color\",\n  imageAttribute: \"image\"\n});\nvar UNIFORMS = [\"u_sizeRatio\", \"u_correctionRatio\", \"u_cameraAngle\", \"u_percentagePadding\", \"u_matrix\", \"u_colorizeImages\", \"u_keepWithinCircle\", \"u_atlas\"];\n\n/**\n * To share the texture between the program instances of the graph and the\n * hovered nodes (to prevent some flickering, mostly), this program must be\n * \"built\" for each sigma instance:\n */\nfunction createNodeImageProgram(options) {\n  var _NodeImageProgram;\n  // Compute effective MAX_TEXTURE_SIZE from the current WebGL context:\n  var gl = document.createElement(\"canvas\").getContext(\"webgl\");\n  var defaultMaxTextureSize = Math.min(gl.getParameter(gl.MAX_TEXTURE_SIZE), DEFAULT_TEXTURE_MANAGER_OPTIONS.maxTextureSize);\n  gl.canvas.remove();\n  var _maxTextureSize = _objectSpread2(_objectSpread2(_objectSpread2({}, DEFAULT_CREATE_NODE_IMAGE_OPTIONS), {\n      maxTextureSize: defaultMaxTextureSize\n    }), options || {}),\n    drawHover = _maxTextureSize.drawHover,\n    drawLabel = _maxTextureSize.drawLabel,\n    drawingMode = _maxTextureSize.drawingMode,\n    keepWithinCircle = _maxTextureSize.keepWithinCircle,\n    padding = _maxTextureSize.padding,\n    colorAttribute = _maxTextureSize.colorAttribute,\n    imageAttribute = _maxTextureSize.imageAttribute,\n    textureManagerOptions = _objectWithoutProperties(_maxTextureSize, _excluded);\n\n  /**\n   * This texture manager is shared between all instances of this exact class,\n   * returned by this call to createNodeProgramImage. This means that\n   * remounting the sigma instance will not reload the images and regenerate\n   * the texture.\n   */\n  var textureManager = new TextureManager(textureManagerOptions);\n  return _NodeImageProgram = /*#__PURE__*/function (_NodeProgram) {\n    _inherits(NodeImageProgram, _NodeProgram);\n    function NodeImageProgram(gl, pickingBuffer, renderer) {\n      var _this;\n      _classCallCheck(this, NodeImageProgram);\n      _this = _callSuper(this, NodeImageProgram, [gl, pickingBuffer, renderer]);\n      _defineProperty(_assertThisInitialized(_this), \"drawLabel\", drawLabel);\n      _defineProperty(_assertThisInitialized(_this), \"drawHover\", drawHover);\n      _defineProperty(_assertThisInitialized(_this), \"textureManagerCallback\", null);\n      _this.textureManagerCallback = function (_ref) {\n        var atlas = _ref.atlas,\n          textures = _ref.textures;\n        var shouldUpgradeShaders = textures.length !== _this.textures.length;\n        _this.atlas = atlas;\n        _this.textureImages = textures;\n        if (shouldUpgradeShaders) _this.upgradeShaders();\n        _this.bindTextures();\n        if (_this.latestRenderParams) _this.render(_this.latestRenderParams);\n        if (_this.renderer && _this.renderer.refresh) _this.renderer.refresh();\n      };\n      textureManager.on(TextureManager.NEW_TEXTURE_EVENT, _this.textureManagerCallback);\n      _this.atlas = textureManager.getAtlas();\n      _this.textureImages = textureManager.getTextures();\n      _this.textures = _this.textureImages.map(function () {\n        return gl.createTexture();\n      });\n      _this.bindTextures();\n      return _this;\n    }\n    _createClass(NodeImageProgram, [{\n      key: \"getDefinition\",\n      value: function getDefinition() {\n        return {\n          VERTICES: 3,\n          VERTEX_SHADER_SOURCE: VERTEX_SHADER_SOURCE$1,\n          FRAGMENT_SHADER_SOURCE: getFragmentShader({\n            texturesCount: textureManager.getTextures().length\n          }),\n          METHOD: WebGLRenderingContext.TRIANGLES,\n          UNIFORMS: UNIFORMS,\n          ATTRIBUTES: [{\n            name: \"a_position\",\n            size: 2,\n            type: FLOAT\n          }, {\n            name: \"a_size\",\n            size: 1,\n            type: FLOAT\n          }, {\n            name: \"a_color\",\n            size: 4,\n            type: UNSIGNED_BYTE,\n            normalized: true\n          }, {\n            name: \"a_id\",\n            size: 4,\n            type: UNSIGNED_BYTE,\n            normalized: true\n          }, {\n            name: \"a_texture\",\n            size: 4,\n            type: FLOAT\n          }, {\n            name: \"a_textureIndex\",\n            size: 1,\n            type: FLOAT\n          }],\n          CONSTANT_ATTRIBUTES: [{\n            name: \"a_angle\",\n            size: 1,\n            type: FLOAT\n          }],\n          CONSTANT_DATA: [[NodeImageProgram.ANGLE_1], [NodeImageProgram.ANGLE_2], [NodeImageProgram.ANGLE_3]]\n        };\n      }\n    }, {\n      key: \"upgradeShaders\",\n      value: function upgradeShaders() {\n        var def = this.getDefinition();\n        var _this$normalProgram = this.normalProgram,\n          program = _this$normalProgram.program,\n          buffer = _this$normalProgram.buffer,\n          vertexShader = _this$normalProgram.vertexShader,\n          fragmentShader = _this$normalProgram.fragmentShader,\n          gl = _this$normalProgram.gl;\n        gl.deleteProgram(program);\n        gl.deleteBuffer(buffer);\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n        this.normalProgram = this.getProgramInfo(\"normal\", gl, def.VERTEX_SHADER_SOURCE, def.FRAGMENT_SHADER_SOURCE, null);\n      }\n    }, {\n      key: \"kill\",\n      value: function kill() {\n        var _this$normalProgram2;\n        var gl = (_this$normalProgram2 = this.normalProgram) === null || _this$normalProgram2 === void 0 ? void 0 : _this$normalProgram2.gl;\n        if (gl) {\n          for (var i = 0; i < this.textures.length; i++) {\n            gl.deleteTexture(this.textures[i]);\n          }\n        }\n        if (this.textureManagerCallback) {\n          textureManager.off(TextureManager.NEW_TEXTURE_EVENT, this.textureManagerCallback);\n          this.textureManagerCallback = null;\n        }\n        _get(_getPrototypeOf(NodeImageProgram.prototype), \"kill\", this).call(this);\n      }\n    }, {\n      key: \"bindTextures\",\n      value: function bindTextures() {\n        var gl = this.normalProgram.gl;\n        for (var i = 0; i < this.textureImages.length; i++) {\n          if (i >= this.textures.length) {\n            var texture = gl.createTexture();\n            if (texture) this.textures.push(texture);\n          }\n          gl.activeTexture(gl.TEXTURE0 + i);\n          gl.bindTexture(gl.TEXTURE_2D, this.textures[i]);\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.textureImages[i]);\n          gl.generateMipmap(gl.TEXTURE_2D);\n        }\n      }\n    }, {\n      key: \"renderProgram\",\n      value: function renderProgram(params, programInfo) {\n        if (!programInfo.isPicking) {\n          // Rebind texture (since it's been just unbound by picking):\n          var _gl = programInfo.gl;\n          for (var i = 0; i < this.textureImages.length; i++) {\n            _gl.activeTexture(_gl.TEXTURE0 + i);\n            _gl.bindTexture(_gl.TEXTURE_2D, this.textures[i]);\n          }\n        }\n        _get(_getPrototypeOf(NodeImageProgram.prototype), \"renderProgram\", this).call(this, params, programInfo);\n      }\n    }, {\n      key: \"processVisibleItem\",\n      value: function processVisibleItem(nodeIndex, startIndex, data) {\n        var array = this.array;\n        var color = floatColor(data[colorAttribute]);\n        var imageSource = data[imageAttribute];\n        var imagePosition = imageSource ? this.atlas[imageSource] : undefined;\n        if (typeof imageSource === \"string\" && !imagePosition) textureManager.registerImage(imageSource);\n        array[startIndex++] = data.x;\n        array[startIndex++] = data.y;\n        array[startIndex++] = data.size;\n        array[startIndex++] = color;\n        array[startIndex++] = nodeIndex;\n\n        // Reference texture:\n        if (imagePosition && typeof imagePosition.textureIndex === \"number\") {\n          var _this$textureImages$i = this.textureImages[imagePosition.textureIndex],\n            width = _this$textureImages$i.width,\n            height = _this$textureImages$i.height;\n          array[startIndex++] = imagePosition.x / width;\n          array[startIndex++] = imagePosition.y / height;\n          array[startIndex++] = imagePosition.size / width;\n          array[startIndex++] = imagePosition.size / height;\n          array[startIndex++] = imagePosition.textureIndex;\n        } else {\n          array[startIndex++] = 0;\n          array[startIndex++] = 0;\n          array[startIndex++] = 0;\n          array[startIndex++] = 0;\n          array[startIndex++] = 0;\n        }\n      }\n    }, {\n      key: \"setUniforms\",\n      value: function setUniforms(params, _ref2) {\n        var gl = _ref2.gl,\n          uniformLocations = _ref2.uniformLocations;\n        var u_sizeRatio = uniformLocations.u_sizeRatio,\n          u_correctionRatio = uniformLocations.u_correctionRatio,\n          u_matrix = uniformLocations.u_matrix,\n          u_atlas = uniformLocations.u_atlas,\n          u_colorizeImages = uniformLocations.u_colorizeImages,\n          u_keepWithinCircle = uniformLocations.u_keepWithinCircle,\n          u_cameraAngle = uniformLocations.u_cameraAngle,\n          u_percentagePadding = uniformLocations.u_percentagePadding;\n        this.latestRenderParams = params;\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\n        gl.uniform1f(u_sizeRatio, keepWithinCircle ? params.sizeRatio : params.sizeRatio / Math.SQRT2);\n        gl.uniform1f(u_cameraAngle, params.cameraAngle);\n        gl.uniform1f(u_percentagePadding, padding);\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n        gl.uniform1iv(u_atlas, _toConsumableArray(new Array(this.textureImages.length)).map(function (_, i) {\n          return i;\n        }));\n        gl.uniform1i(u_colorizeImages, drawingMode === \"color\" ? 1 : 0);\n        gl.uniform1i(u_keepWithinCircle, keepWithinCircle ? 1 : 0);\n      }\n    }]);\n    return NodeImageProgram;\n  }(NodeProgram), _defineProperty(_NodeImageProgram, \"ANGLE_1\", 0), _defineProperty(_NodeImageProgram, \"ANGLE_2\", 2 * Math.PI / 3), _defineProperty(_NodeImageProgram, \"ANGLE_3\", 4 * Math.PI / 3), _defineProperty(_NodeImageProgram, \"textureManager\", textureManager), _NodeImageProgram;\n}\n\nvar NodeImageProgram = createNodeImageProgram();\nvar NodePictogramProgram = createNodeImageProgram({\n  keepWithinCircle: false,\n  size: {\n    mode: \"force\",\n    value: 256\n  },\n  drawingMode: \"color\",\n  correctCentering: true\n});\n\nexport { NodeImageProgram, NodePictogramProgram, createNodeImageProgram };\n"],
  "mappings": "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",
  "names": ["NodePointProgram", "EdgeLineProgram", "EdgeTriangleProgram", "_classCallCheck", "_createClass", "_getPrototypeOf", "o", "t", "_callSuper", "_get", "_setPrototypeOf", "p", "_inherits", "r", "VERTEX_SHADER_SOURCE", "VERTEX_SHADER_SOURCE$1", "e", "n", "i", "a", "c", "u", "h", "_loop", "PictogramCenteringCorrector", "TextureManager", "_WebGLRenderingContex", "UNSIGNED_BYTE", "FLOAT", "UNIFORMS", "NodeImageProgram", "gl"]
}
